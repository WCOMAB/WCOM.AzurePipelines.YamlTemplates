jobs:
  - deployment: ${{ format('{0}_Deploy', parameters.envName) }}
    displayName: ${{ parameters.envName }} Deploy SSDT
    environment: ${{ parameters.envName }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: $(Build.Repository.Name).Dacpac
              displayName: Download $(Build.Repository.Name) Dacpac artifact

            - bash: |
                echo "##vso[task.setvariable variable=AgentPublicIP;]$(curl checkip.amazonaws.com)"
              displayName: 'Get Agent Public IP'

            - bash: |
                [ -f ./tools/sqlpackage ] || [ -f ./tools/sqlpackage.exe ] || dotnet tool install --tool-path ./tools microsoft.sqlpackage
              displayName: Install SqlPackage

            - ${{ each database in parameters.databases }}:
              - template: deploy_database.yml
                parameters:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  resourceGroup: ${{ parameters.resourceGroup }}
                  serverName: ${{ parameters.serverName }}
                  agentPublicIP: $(AgentPublicIP)
                  connectionString: ${{ coalesce(parameters.connectionString, format(coalesce(parameters.connectionStringFormat, 'Server=tcp:{0}.database.windows.net,1433;Initial Catalog={1};Authentication=Active Directory Default;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'), parameters.serverName, format(coalesce(parameters.databaseFormat, '{1}'), parameters.system, database.name, parameters.env, parameters.suffix), parameters.system, parameters.env, parameters.suffix)) }}
                  databaseName: ${{ format(coalesce(parameters.databaseFormat, '{1}'), parameters.system, database.name, parameters.env, parameters.suffix) }}
                  azureFirewallRule: '$(Build.Repository.Name)-$(Build.BuildNumber)'
                  env: ${{ parameters.env }}
                  envName: ${{ parameters.envName }}}
                  suffix: ${{ parameters.suffix }}
                  system: ${{ parameters.system }}