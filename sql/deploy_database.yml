steps:
  - task: AzureCLI@2
    displayName: 'Deploy ${{ parameters.databaseName }} to environment ${{ parameters.envName }}.'
    env:
      MSYS_NO_PATHCONV: 1
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript:  |
        # Base command
        cmd='./tools/sqlpackage'

        # Common parameters
        cmd+=' /Action:Publish'
        cmd+=' -p:ScriptDatabaseCompatibility=true'
        cmd+=' /SourceFile:"$(Pipeline.Workspace)/${{ parameters.artifactNamePrefix }}$(Build.DefinitionName).Dacpac/${{ parameters.databaseName }}.dacpac"'
        cmd+=' /TargetConnectionString:"${{ parameters.connectionString }}"'
        cmd+=' /v:"AzureDevOpsEnvironment=${{ parameters.env }}"'
        cmd+=' /v:"AzureDevOpsEnvironmentName=$(Environment.Name)"'
        cmd+=' /v:"AzureDevOpsBuildNumber=$(Build.BuildNumber)"'
        cmd+=' /v:"AzureDevOpsRepositoryName=$(Build.Repository.Name)"'
        cmd+=' /v:"AzureDevOpsSystem=${{ parameters.system }}"'
        cmd+=' /v:"AzureDevOpsSuffix=${{ parameters.suffix }}"'
        cmd+=' ${{ parameters.deployParameters }}'

        # Check if Firewall is used
        if [ '${{ parameters.useFirewall }}' == 'True' ]; then
          echo 'Creating firewall rule...'
          az sql server firewall-rule create -g ${{ parameters.resourceGroup }} -s ${{ parameters.serverName }} -n "${{ parameters.azureFirewallRule}}" --start-ip-address ${{ parameters.agentPublicIP }} --end-ip-address ${{ parameters.agentPublicIP }}
          echo "Firewall rule created ($?)."
        fi

        # Check Skip Profile
        if [ '${{ parameters.skipProfile }}' == 'False' ]; then
          echo 'Use profile'
          cmd+=' /Profile:"$(Pipeline.Workspace)/${{ parameters.artifactNamePrefix }}$(Build.DefinitionName).Dacpac/${{ parameters.databaseName }}.publish.xml"'
        fi

        # Check useToken
        if [ '${{ parameters.useToken }}' == 'True' ]; then
          echo 'Use token'
          token=$(az account get-access-token --resource https://database.windows.net/ --query accessToken --output tsv)
          echo "##vso[task.setsecret]$token"
          cmd+=" /at:'$token'"
        fi

        # Execute the command
        echo "Executing: $cmd"
        eval $cmd

        # Capture the exit code of eval
        result=$?

        # Remove Firewall rule if Firewall is in use
        if [ '${{ parameters.useFirewall }}' == 'True' ]; then
          echo 'Removing firewall rule...'
          az sql server firewall-rule delete -g '${{ parameters.resourceGroup }}' -s '${{ parameters.serverName }}' -n '${{ parameters.azureFirewallRule}}'
          echo "Firewall rule removed ($?)."
        fi

        exit $result
