steps:
  - task: AzureCLI@2
    displayName: 'Deploy ${{ parameters.databaseName }} to environment ${{ parameters.envName }}.'
    env:
      MSYS_NO_PATHCONV: 1
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript:  |
        # Base command
        cmd="./tools/sqlpackage"

        # Common parameters
        cmd+=" /Action:Publish -p:ScriptDatabaseCompatibility=true /SourceFile:\"$(Pipeline.Workspace)/${{ parameters.artifactNamePrefix }}$(Build.DefinitionName).Dacpac/${{ parameters.databaseName }}.dacpac\" /TargetConnectionString:\"${{ parameters.connectionString }}\" /v:\"AzureDevOpsEnvironment=${{ parameters.env }}\" /v:\"AzureDevOpsEnvironmentName=$(Environment.Name)\" /v:\"AzureDevOpsBuildNumber=$(Build.BuildNumber)\" /v:\"AzureDevOpsRepositoryName=$(Build.Repository.Name)\" /v:\"AzureDevOpsSystem=${{ parameters.system }}\" /v:\"AzureDevOpsSuffix=${{ parameters.suffix }}\" ${{ parameters.deployParameters }}"

        # Check if Firewall is used
        if [ "${{ parameters.useFirewall }}" = "True" ]; then
          az sql server firewall-rule create -g ${{ parameters.resourceGroup }} -s ${{ parameters.serverName }} -n "${{ parameters.azureFirewallRule}}" --start-ip-address ${{ parameters.agentPublicIP }} --end-ip-address ${{ parameters.agentPublicIP }}
          echo "Firewall rule created ${{ parameters.useFirewall }}"
        fi

        # Check Skip Profile
        if [ "${{ parameters.skipProfile }}" = "False" ]; then
          cmd+=" /Profile:\"$(Pipeline.Workspace)/${{ parameters.artifactNamePrefix }}$(Build.DefinitionName).Dacpac/${{ parameters.databaseName }}.publish.xml\""
          echo "Use profile"
        fi

        # Check useToken
        if [ "${{ parameters.useToken }}" = "True" ]; then
          token=$(az account get-access-token --resource https://database.windows.net/ --query accessToken --output tsv)
          cmd+=" /at:$token"
          echo "Use token"
        fi

        # Execute the command
        eval $cmd

        # Capture the exit code of eval
        result=$?

        # Remove Firewall rule if Firewall is in use
        if [ "${{ parameters.useFirewall }}" = "True" ]; then
          az sql server firewall-rule delete -g ${{ parameters.resourceGroup }} -s ${{ parameters.serverName }} -n "${{ parameters.azureFirewallRule}}"
          echo "Firewall rule removed ${{ parameters.useFirewall }}"
        fi

        exit $result
       