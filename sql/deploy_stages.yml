stages:
  - ${{ each environment in parameters.environments }}:
    - ${{ if eq(environment.deploy, true) }}:
      - stage: ${{ format('Deploy_{0}', coalesce(environment.displayName, environment.name)) }}
        condition: and(succeeded(), ${{ parameters.shouldDeploy }})
        ${{ if environment.envPool }}:
          pool: ${{ environment.envPool }}
        ${{ else }}:
          pool: ${{ parameters.pool }}
        dependsOn:
          - ${{ each env in parameters.environments }}:
              - ${{ if eq(env.name, parameters.build) }}:
                - ${{ format('Build_{0}', coalesce(environment.displayName, environment.name)) }}
          - ${{ each after in environment.deployAfter }}:
            - ${{ format('Deploy_{0}', after) }}
          - ${{ each depends in environment.dependsOn }}:
            - ${{ depends }}
        displayName: ${{ format('Deploy to {0}', coalesce(environment.displayName, environment.name)) }}
        jobs:
          - template: deploy_jobs.yml
            parameters:
              env: ${{ environment.env }}
              envName: ${{ environment.name }}
              system: ${{ parameters.system }}
              suffix: ${{ parameters.suffix }}
              azureSubscription: ${{ format(coalesce(coalesce(environment.azureSubscriptionFormat, parameters.azureSubscriptionFormat), 'azdo-{0}-{1}-{2}-{3}'), parameters.devopsOrg, parameters.system, environment.env, parameters.suffix, environment.name) }}
              resourceGroup: ${{ format(coalesce(coalesce(environment.resourceGroupFormat, parameters.resourceGroupFormat), '{0}-{1}-{2}'), parameters.system, environment.env, parameters.suffix, environment.name) }}
              connectionString: ${{ environment.connectionString }}
              connectionStringFormat: ${{ environment.connectionStringFormat }}
              serverName: ${{ coalesce(environment.serverName, format(coalesce(parameters.serverNameFormat, '{0}-{1}-{2}-{3}-{4}'), parameters.system, parameters.serverName, coalesce(parameters.sqlType, 'sql'), environment.env, parameters.suffix)) }}
              ${{ if environment.databases }}:
                databases: ${{ environment.databases}}
              ${{ else }}:
                databases: ${{ parameters.databases }}
              databaseFormat: ${{ parameters.databaseFormat }}
              deployParameters : ${{ environment.deployParameters }}
              artifactNamePrefix: ${{ parameters.artifactNamePrefix }}
              useFirewall: ${{ coalesce(parameters.useFirewall, true) }}
              skipProfile: ${{ coalesce(parameters.skipProfile, false) }}
              useDotNetSDK: ${{ parameters.useDotNetSDK }}