jobs:
  - job: Build
    displayName: ${{ format('{0} Build', parameters.name) }}
    variables:
    - ${{ each resource in parameters.resources }}:
      - name: 'DocumentationSettings__Resources__${{ resource.env }}__Name'
        value: '${{ resource.name }}'
      - name: 'DocumentationSettings__Resources__${{ resource.env }}__Env'
        value: '${{ resource.env }}'
      - name: 'DocumentationSettings__Resources__${{ resource.env }}__ResourceGroup'
        value: '${{ resource.resourceGroup }}'
      - name: 'DocumentationSettings__Resources__${{ resource.env }}__KeyVaultName'
        value: '${{ resource.keyVaultName }}'
      - name: 'DocumentationSettings__Resources__${{ resource.env }}__ApiUrl'
        value: '${{ resource.eventApi.url }}'
      - ${{ each after in resource.deployAfter }}:
        - name: 'DocumentationSettings__Resources__${{ resource.env }}__DeployAfter__${{ after }}'
          value: '${{ after }}'
    steps:
    - template: ../dotnetcommon/dotnet_sdk.yml
      parameters:
        useDotNetSDK: ${{ parameters.useDotNetSDK }}

    - template: ../dotnetcommon/dotnet_auth.yml
      parameters:
        sources: ${{ parameters.sources }}

    - template: ../dotnetcommon/dotnet_tool.yml
      parameters:
        toolRestore: true

    - task: AzureCLI@2
      displayName: Generate $(Build.Repository.Name) Settings Manifest
      env:
          KeyVaultSettings__VaultName: '${{ parameters.keyVaultName }}'
          EventHttpClientSettings__ApiUrl: '${{ parameters.eventApi.url}}'
          EventHttpClientSettings__ApiKey: '${{ parameters.eventApi.key}}'
          SubscriberSettings__Name: '${{ parameters.subsriber.name}}'
          SubscriberSettings__CallbackEvent: '${{ parameters.subsriber.callbackEvent}}'
      inputs:
        azureSubscription: '${{ parameters.azureSubscription }}'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          dotnet wcomsign generate ./config ./artifacts --clean-output