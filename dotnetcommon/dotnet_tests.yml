steps:
- ${{ if ne(parameters.skipTests, true) }}:
  - script: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.2.1
    displayName: Installing Report Generator

  - script: dotnet test ${{ parameters.projectSrc }} ${{ join(' ', parameters.buildParameters) }} --no-build --no-restore --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura
    displayName: 'DotNet Test'

  - script: reportgenerator -reports:$(Agent.WorkFolder)/**/TestResults/**/coverage.cobertura.xml -targetdir:$(build.artifactstagingdirectory)/Report -reporttypes:"Cobertura"
    displayName: 'Merge code coverage reports'
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(build.artifactstagingdirectory)/Report/Cobertura.xml'

  - task: PublishTestResults@2
    displayName: 'Publish VSTest logs'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '$(Agent.WorkFolder)/**/TestResults/*.trx'
