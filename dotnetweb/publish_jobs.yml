jobs:
- job: Publish
  displayName: ${{ format('{0} Build', parameters.name) }}
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET SDK (global.json)'
    inputs:
      packageType: sdk
      useGlobalJson: true

  - template: ../dotnetcommon/dotnet_auth.yml
    parameters:
      sources: ${{ parameters.sources }}

  - ${{ if in(parameters.preBuildScript.scriptType, 'pscore', 'bash') }}:
    - ${{ if eq(parameters.preBuildScript.scriptType, 'pscore') }}:
      - task: Powershell@2
        displayName: Pre-Build Powershell Script
        inputs:
          targetType: ${{ parameters.preBuildScript.targetType }}
          filePath: ${{ parameters.preBuildScript.filePath }}
          script: ${{ parameters.preBuildScript.script }}
          arguments: ${{ parameters.preBuildScript.arguments }}
          failOnStderr: ${{ parameters.preBuildScript.failOnStderr }}
          showWarnings: ${{ parameters.preBuildScript.showWarnings }}
          pwsh: ${{ parameters.preBuildScript.pwsh }}
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    - ${{ if eq(parameters.preBuildScript.scriptType, 'bash') }}:
      - task: Bash@3
        displayName: Pre-Build Bash Script
        inputs:
          targetType: ${{ parameters.preBuildScript.targetType }}
          filePath: ${{ parameters.preBuildScript.filePath }}
          script: ${{ parameters.preBuildScript.script }}
          arguments: ${{ parameters.preBuildScript.arguments }}
          failOnStderr: ${{ parameters.preBuildScript.failOnStderr }}
          workingDirectory: ${{ parameters.preBuildScript.workingDirectory }}
          bashEnvValue: ${{ parameters.preBuildScript.bashEnvValue }}
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - script: dotnet publish ${{ parameters.projectSrc }} --output "$(build.artifactstagingdirectory)" -p:Version=$(Build.BuildNumber) ${{ join(' ', parameters.buildParameters) }}
    displayName: Publish DotNet App

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(build.artifactstagingdirectory)"
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: "$(build.artifactstagingdirectory)/$(Build.Repository.Name)-$(Build.BuildNumber).zip"
      replaceExistingArchive: true

  - publish: "$(build.artifactstagingdirectory)/$(Build.Repository.Name)-$(Build.BuildNumber).zip"
    displayName: 'Publish $(Build.Repository.Name) Zip Artifact'
    artifact: $(Build.Repository.Name)
